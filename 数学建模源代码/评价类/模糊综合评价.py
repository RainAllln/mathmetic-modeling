# 问题遇到大与小，长与短，美与丑等模糊性概念时，用模糊集合来表示
# 模糊集合有三类，偏小型，偏大型，中间型（比如年轻就是个偏小型）
# 隶属函数确定方法：1.模糊统计法（一般不用）2.借助已有客观尺度（恩格尔系数衡量小康家庭等）,3.指派法，确定集合所属分类，直接指派一个函数（常用）
# 模糊评价问题概述：把论域中的对象对应评语集中的一个指定评语或者将方案作为评语集并选择一个最优方案
# 引入三个集合：1.因素集（指标集）2.评语集（评价结果，比如优良差等）3.权重集
# 一级模糊综合评价，1.确定因素集U，评语集V，权重集A
# 2.确定模糊综合判断矩阵，对于指标u(i)来说，各个评语的隶属度为V上的模糊子集，对指标u(i)的评判记为R(i)=[r(i1),r(i2)...r(in)]
# 3.进行矩阵合成运算，得分B=A*R,就是矩阵A乘以矩阵R

#一级模糊综合评价
#举例
#项目     方案1     方案2     方案3     方案4     方案5
#采矿量    4700     6700     5900     8800     7600
#基建投资  5000     5500      5300    6800      6000
#成本     4          6.1     5.5      7.0      6.8
#不稳定费用 30       50       40       200      160
#净现值    1500     700      1000     50       100
#储量有8800吨，总投资不超过8000
#先确定隶属函数
#采矿量μ(x)=x/8800.投资约束为8000，μ(x)=1-x/8000
#成本，专家建议a1<=5.5是低成本，a2=8为高成本
#成本μ(x)=1,0<=x<=a1;μ(x)=(a2-x)/(a2-a1),a1<=x<=a2;μ(x)=0,a2<x
#不稳定费用μ(x)=1-x/200,200最差
#净现值越大越好，上限1500，下限50，μ(x)=(x-50)/(1500-50)
import numpy as np

R23 = np.array([
    [0.5341, 0.7614, 0.6705, 1.0000, 0.8636],
    [0.3750, 0.3125, 0.3375, 0.1500, 0.2500],
    [1.0000, 0.7600, 1.0000, 0.4000, 0.4800],
    [0.8500, 0.7500, 0.8000, 0.0000, 0.2000],
    [1.0000, 0.4480, 0.6552, 0.0000, 0.0345]
])
#根据熵权法，层次分析法得到权重
A23 = np.array([0.25, 0.20, 0.20, 0.10, 0.25])
ans = np.dot(A23,R23)
print(ans)